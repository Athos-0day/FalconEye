services:
  mosquitto:
    image: eclipse-mosquitto:2
    container_name: mosquitto
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./docker/mqtt/mosquitto/config:/mosquitto/config
      - ./docker/mqtt/mosquitto/log:/mosquitto/log
      - ./docker/mqtt/mosquitto/data:/mosquitto/data
    restart: unless-stopped
    networks:
      - falconnet

  influxdb:
    image: influxdb:2.7
    container_name: influxdb
    ports:
      - "8086:8086"
    volumes:
      - ./docker/influxdb/data:/var/lib/influxdb2
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=adminpass
      - DOCKER_INFLUXDB_INIT_ORG=falconeye
      - DOCKER_INFLUXDB_INIT_BUCKET=mybucket
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=supersecrettoken
    restart: unless-stopped
    networks:
      - falconnet

  collector:
    build: ./docker/data-collector
    container_name: mqtt_collector_influxdb
    restart: unless-stopped
    depends_on:
      - mosquitto
      - influxdb
    networks:
      - falconnet

  grafana:
    image: grafana/grafana:10.4.1
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=adminpass
    volumes:
      - ./docker/grafana:/var/lib/grafana
      - ./docker/grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - influxdb
    networks:
      - falconnet


  engine_simulator:
    build:
      context: .
      dockerfile: docker/sensor-engine/Dockerfile
    container_name: engine_simulator
    command: python engine_simulator.py
    networks:
      - falconnet
    depends_on:
      - mosquitto

  hydraulics_simulator:
    build:
      context: .
      dockerfile: docker/sensor-engine/Dockerfile
    container_name: hydraulics_simulator
    command: python hydraulic_simulator.py
    networks:
      - falconnet
    depends_on:
      - mosquitto
  
  structural_simulator:
    build:
      context: .
      dockerfile: docker/sensor-engine/Dockerfile
    container_name: structural_simulator
    command: python structural_simulator.py
    networks:
      - falconnet
    depends_on:
      - mosquitto
  
  navigation_simulator:
    build:
      context: .
      dockerfile: docker/sensor-engine/Dockerfile
    container_name: navigation_simulator
    command: python navigation_simulator.py
    networks:
      - falconnet
    depends_on:
      - mosquitto
  
  flightcontrol_simulator:
    build:
      context: .
      dockerfile: docker/sensor-engine/Dockerfile
    container_name: flightcontrol_simulator
    command: python flight_control_simulator.py
    networks:
      - falconnet
    depends_on:
      - mosquitto


networks:
  falconnet:
    name: falconnet
